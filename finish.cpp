//=============================================================================
//
// タイトル画面処理 [finish.cpp]
// Author : 
//
//=============================================================================
#include "finish.h"
#include "input.h"
#include "texture.h"
#include "sprite.h"
#include "fade.h"
#include "sound.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************



//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************
static int	g_FinishBGTex = 0;	// テクスチャ情報
static int	g_Timer = 0;

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitFinish(void)
{
	//テクスチャ生成
	g_FinishBGTex = LoadTexture("data/TEXTURE/GameFinished.png");
	g_Timer = 0;

	//255(-1)をループ指定すると無限ループ
	//PlaySound(g_BGMNo, -1);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitFinish(void)
{
	
}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateFinish(void)
{
	if (g_Timer < 480)
	{
		g_Timer++;
	}
	else
	{
		g_Timer = 0;
		SceneTransition(SCENE_LEVEL);
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawFinish(void)
{
	// １枚のポリゴンの頂点とテクスチャ座標を設定
	DrawSpriteLeftTop(g_FinishBGTex, 0.0f, 0.0f, SCREEN_WIDTH, SCREEN_HEIGHT, 0.0f, 0.0f, 1.0f, 1.0f);

}

